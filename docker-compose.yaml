#########################################
##                                      #
##        Learn2Swim HTPC Docker        #
##                                      #
#################################################
##                                              #
## Configuration is read from the .env file     #
## Ensure the .env file is in this folder       #
##                                              #
#################################################

version: "3.5"

services:
  #PLEX: Media management & distribution service
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    ports:
      - 32400:32400
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:324
      - 3005:3005
      - 8324:8324
      - 1900:1900
      - 5353:5353
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - '${CONFIG_PATH}/:/config'
      - '${MEDIA_BASE_PATH}/tv/:/tv'
      - '${MEDIA_BASE_PATH}/movies:/movies'
      - '${MEDIA_BASE_PATH}/books:/books'
      # DELUGEVPN: Deluge Torrent Client + VPN
  deluge:
    image: binhex/arch-delugevpn
    container_name: deluge
    restart: unless-stopped
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${DELUGE_PORT}:8112'
      - '8118:8118'
      - '58846:58846'
      - '58946:58946'
    # expose:
    #   - 8112
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - VPN_ENABLED=no
      - VPN_USER=${VPNUNAME}
      - VPN_PASS=${VPNPASS}
      - VPN_REMOTE=${VPN_REMOTE}
      - VPN_PORT=1198
      - VPN_PROTOCOL=udp
      - VPN_DEVICE_TYPE=tun
      - VPN_PROV=${VPNPROVIDER}
      - STRONG_CERTS=no
      - ENABLE_PRIVOXY=yes
      - STRICT_PORT_FORWARD=yes
      - LAN_NETWORK=${CIDR_ADDRESS}
      - NAME_SERVERS=37.235.1.174,8.8.8.8,37.235.1.177,8.8.4.4
      - DEBUG=true
      - DELUGE_DAEMON_LOG_LEVEL=debug
      - DELUGE_WEB_LOG_LEVEL=debug
      - DELUGE_ENABLE_WEBUI_PASSWORD=no #remove later
    volumes:
      - '${TORRENTS_PATH}/:/data'
      - '${CONFIG_PATH}/:/config'
      - '/etc/localtime:/etc/localtime:ro'

  # READARR: Book Management
  readarr:
    container_name: readarr
    image: lscr.io/linuxserver/readarr:develop
    restart: unless-stopped
    env_file: .env
    network_mode: host
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - '${TORRENTS_PATH}/completed:/torrents/completed'
      - '${MEDIA_BASE_PATH}/books:/books'

  # CALIBRE: Book Interface
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    security_opt:
      - seccomp:unconfined #optional
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${CALIBRE_PORT}:8080'
      - 8181:8181
      - 8081:8081
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - PASSWORD=${CALIBRE_AUTH}
    volumes:
      - '${TORRENTS_PATH}/completed:/torrents/completed'
      - '${MEDIA_BASE_PATH}/books:/books'
      - '/etc/localtime:/etc/localtime:ro'

  # SONARR: TV Series Management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - 8989:8989
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${TORRENTS_PATH}/completed:/torrents/completed'
      - '${MEDIA_BASE_PATH}/tv:/tv'
      - '/etc/localtime:/etc/localtime:ro'

  # RADARR: Movie Management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    network_mode: host
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${CONFIG_PATH}/:/config'
      - '${MEDIA_BASE_PATH}/movies:/movies'
      - '/etc/localtime:/etc/localtime:ro'

  # TAUTULLI: Monitoring Service for PLEX Usage
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    # network_mode: host
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${TAUTULLI_PORT}:8181'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${CONFIG_PATH}/:/config'
      - '/etc/localtime:/etc/localtime:ro'

  # ORGANIZR: Web Frontend for Management
  organizr:
    image: organizr/organizr
    container_name: organizr
    restart: unless-stopped
    env_file: .env
    ports:
      - '${ORGANIZR_PORT}:80'
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
