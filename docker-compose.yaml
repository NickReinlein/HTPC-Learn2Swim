#########################################
##                                      #
##        Learn2Swim HTPC Docker        #
##                                      #
#########################################

version: '3.7'

networks:
  default:
    external: true
    name: learn2swim

services:
  # DELUGEVPN: Deluge torrent client + VPN
  deluge:
    image: binhex/arch-delugevpn:latest
    container_name: delugevpn
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - VPN_ENABLED=yes
      - VPN_USER=${VPNUNAME}
      - VPN_PASS=${VPNPASS}
      - VPN_PROV=${VPNPROVIDER}
      - VPN_CLIENT=openvpn
      - VPN_PROTOCOL=udp
      - VPN_DEVICE_TYPE=tun
      - VPN_PORT=${DELUGEVPN_VPN_PORT}
      # - VPN_REMOTE=${VPN_REMOTE}
      # - VPN_INPUT_PORTS=
      # - VPN_OUTPUT_PORTS=
      - LAN_NETWORK=${CIDR_ADDRESS}
      - STRICT_PORT_FORWARD=no
      - ENABLE_PRIVOXY=no
      - STRONG_CERTS=no
      - NAME_SERVERS=1.1.1.1,8.8.8.8
      - DEBUG=true
      - DELUGE_DAEMON_LOG_LEVEL=info
      - DELUGE_WEB_LOG_LEVEL=info
      - DELUGE_ENABLE_WEBUI_PASSWORD=no #remove later
    volumes:
      - '${CONFIG_PATH}/delugevpn:/config'
      - '${DATA_PATH}/torrents:/data/torrents'
      - '/etc/localtime:/etc/localtime:ro'
    devices:
      - /dev/net/tun
    cap_add:
      - NET_ADMIN
    ports:
      - '${DELUGEVPN_WEBUI_PORT}:8112'
      - '8118:8118'
      - '58846:58846'
      - '58946:58946'
    restart: unless-stopped

  #PLEX: Media management & distribution service
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      - VERSION=docker
      - PLEX_CLAIM=
    volumes:
      - '${CONFIG_PATH}/plex:/config'
      - '${DATA_PATH}/media:/data/media'
    ports:
      - '${PLEX_PORT}:32400'
      - 32410:32410/udp
      - 32411:32411/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 3005:3005
      - 8324:8324
      - 1900:1900
      - 5353:5353
      - 32469:32469

  # PROWLARR: Arr container manager
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    env_file: .env
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    volumes:
      - ${CONFIG_PATH}/prowlarr:/config
      - ${DATA_PATH}:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '${PROWLARR_PORT}:9696'
    restart: unless-stopped

  # RADARR: Movie management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
    volumes:
      - ${CONFIG_PATH}/radarr:/config
      - ${DATA_PATH}:/data
      - ${DATA_PATH}/media/movies:/movies
    ports:
      - '${RADARR_PORT}:7878'
    restart: unless-stopped

  # SONARR: TV series management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
    volumes:
      - ${CONFIG_PATH}/sonarr:/config
      - ${DATA_PATH}:/data
      - ${DATA_PATH}/media/tv:/tv
      - ${DATA_PATH}/media/anime:/anime
    ports:
      - '${SONARR_PORT}:8989'
    restart: unless-stopped

  # ORGANIZR: Web frontend for management
  organizr:
    image: organizr/organizr
    container_name: organizr
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${CONFIG_PATH}/organizr:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '${ORGANIZR_PORT}:80'
    restart: unless-stopped

  # TAUTULLI: Monitoring service for PLEX usage
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${CONFIG_PATH}/tautulli:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '${TAUTULLI_PORT}:8181'
    restart: unless-stopped

  # OVERSEERR: Media request management
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${CONFIG_PATH}/overseerr:/config
      - ${DATA_PATH}:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '${OVERSEERR_PORT}:5055'
    restart: unless-stopped

  # PORTAINER: Docker container manager
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_PATH}/portainer:/data
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    ports:
      - 9000:9000
      - 9443:9443
      - 8000:8000
    restart: unless-stopped

  # UNPACKERR: Unpacks downloads that are packed/zipped/tarred
  unpackerr:
    image: golift/unpackerr
    container_name: unpackerr
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    volumes:
      - ${CONFIG_PATH}/unpackerr:/config
      - ${DATA_PATH}:/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      - UN_DEBUG=false
      - UN_LOG_FILE=
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=1m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=2m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0644
      - UN_DIR_MODE=0755
      # Sonarr Config
      - UN_SONARR_0_URL=http://10.17.0.6:8989
      - UN_SONARR_0_API_KEY=909a25bb95f44fb19797ba83a41aa468
      - UN_SONARR_0_PATHS_0=['/torrents/complete/tv','/torrents/complete/anime']
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m
      # Radarr Config
      - UN_RADARR_0_URL=http://10.17.0.5:7878
      - UN_RADARR_0_API_KEY=8720c0662a364c0d8f495e9f98fab4e3
      - UN_RADARR_0_PATHS_0=['/torrents/complete/movies']
      - UN_RADARR_0_PROTOCOLS=torrent
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m
      # # Lidarr Config
      # - UN_LIDARR_0_URL=http://lidarr:8686
      # - UN_LIDARR_0_API_KEY=
      # - UN_LIDARR_0_PATHS_0=/downloads
      # - UN_LIDARR_0_PROTOCOLS=torrent
      # - UN_LIDARR_0_TIMEOUT=10s
      # - UN_LIDARR_0_DELETE_ORIG=false
      # - UN_LIDARR_0_DELETE_DELAY=5m
      # # Readarr Config
      # - UN_READARR_0_URL=http://readarr:8787
      # - UN_READARR_0_API_KEY=
      # - UN_READARR_0_PATHS_0=/downloads
      # - UN_READARR_0_PROTOCOLS=torrent
      # - UN_READARR_0_TIMEOUT=10s
      # - UN_READARR_0_DELETE_ORIG=false
      # - UN_READARR_0_DELETE_DELAY=5m
      # # Folder Config 
      # - UN_FOLDER_0_PATH=
      # - UN_FOLDER_0_EXTRACT_PATH=
      # - UN_FOLDER_0_DELETE_AFTER=10m
      # - UN_FOLDER_0_DELETE_ORIGINAL=false
      # - UN_FOLDER_0_DELETE_FILES=false
      # - UN_FOLDER_0_MOVE_BACK=false
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true    

  nginx-proxy-manager:
    image: jlesage/nginx-proxy-manager
    container_name: nginx-proxy-manager
    env_file: .env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
    ports:
      - "8181:8181"
      - "8080:8080"
      - "4443:4443"
    volumes:
      - ${DATA_PATH}:/data
      - ${CONFIG_PATH}/nginx-proxy-manager:/config:rw
      - ${CONFIG_PATH}/letsencrypt:/etc/letsencrypt
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "/bin/check-health"]
      interval: 10s
      timeout: 3s
    restart: unless-stopped

    # These services mostly work but have been de-prioritized for now
    # # READARR: Book Management
    # readarr:
    #   container_name: readarr
    #   image: lscr.io/linuxserver/readarr:develop
    #   env_file: .env
    #   environment:
    #     - TZ=${TZ}
    #     - PUID=${PUID}
    #     - PGID=${PGID}
    #     - UMASK=${UMASK}
    #   logging:
    #     driver: 'json-file'
    #     options:
    #       max-file: '${LOG_FILE_NUM}'
    #       max-size: '${LOG_FILE_SIZE}'
    #   volumes:
    #     - '${CONFIG_PATH}/readarr:/config'
    #     - '${MEDIA_BASE_PATH}/books:/books'
    #     - '${TORRENT_COMPLETE_PATH}:  '
    #     - /etc/localtime:/etc/localtime:ro
    #   ports:
    #     - '${READARR_PORT}:8787'
    #   restart: unless-stopped

    # # CALIBRE: Book Interface
    # calibre:
    #   image: lscr.io/linuxserver/calibre:latest
    #   container_name: calibre
    #   security_opt:
    #     - seccomp:unconfined #optional
    #   logging:
    #     driver: 'json-file'
    #     options:
    #       max-file: '${LOG_FILE_NUM}'
    #       max-size: '${LOG_FILE_SIZE}'
    #   environment:
    #     - TZ=${TZ}
    #     - PUID=${PUID}
    #     - PGID=${PGID}
    #     - UMASK=${UMASK}
    #     - PASSWORD=${CALIBRE_AUTH_PASSWORD}
    #   volumes:
    #     - '${MEDIA_BASE_PATH}/books:/books'
    #     - '${TORRENT_COMPLETE_PATH}:/new'
    #     - '/etc/localtime:/etc/localtime:ro'
    #   ports:
    #     - '${CALIBRE_HTTP_PORT}:8080'
    #     - '${CALIBRE_HTTPS_PORT}:8181'
    #     - '${CALIBRE_WEBSERVER_PORT}:8081'
    #   restart: unless-stopped
