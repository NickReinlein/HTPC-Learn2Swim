#########################################
##                                      #
##        Learn2Swim HTPC Docker        #
##                                      #
#################################################
##                                              #
## Configuration is read from the .env file     #
## Ensure the .env file is in this folder       #
##                                              #
#################################################

version: '3.5'

services:
  #PLEX: Media management & distribution service
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - '${CONFIG_PATH}/plex:/config'
      - '${TRANSCODE_PATH}/plex:/transcode'
      - '${TORRENT_COMPLETE_PATH}:/new'
      - '${MEDIA_BASE_PATH}/tv:/tv'
      - '${MEDIA_BASE_PATH}/movies:/movies'
      - '${MEDIA_BASE_PATH}/books:/books'
    ports:
      - '${PLEX_PORT}:32400'
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 3005:3005
      - 8324:8324
      - 1900:1900
      - 5353:5353
      - 32469:32469
    restart: unless-stopped

  # DELUGEVPN: Deluge Torrent Client + VPN
  deluge:
    image: binhex/arch-delugevpn:latest
    container_name: delugevpn
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - VPN_ENABLED=yes
      - VPN_USER=${VPNUNAME}
      - VPN_PASS=${VPNPASS}
      - VPN_PROV=${VPNPROVIDER}
      - VPN_REMOTE=${VPN_REMOTE}
      - VPN_CLIENT=openvpn
      - VPN_PROTOCOL=udp
      - VPN_DEVICE_TYPE=tun
      - VPN_PORT=${DELUGEVPN_VPN_PORT}
      - VPN_INPUT_PORTS=1234
      # - VPN_OUTPUT_PORTS=5678
      - STRICT_PORT_FORWARD=no
      - ENABLE_PRIVOXY=no
      - STRONG_CERTS=no
      - LAN_NETWORK=${CIDR_ADDRESS}
      - NAME_SERVERS=84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40
      - DEBUG=true
      - DELUGE_DAEMON_LOG_LEVEL=trace
      - DELUGE_WEB_LOG_LEVEL=trace
      - DELUGE_ENABLE_WEBUI_PASSWORD=no #remove later
    volumes:
      - '${CONFIG_PATH}/delugevpn:/config'
      - '${TORRENT_BASE_PATH}:/data'
      - '${TORRENT_INCOMPLETE_PATH}:/incomplete'
      - '${TORRENT_COMPLETE_PATH}:/complete'
      - '${TORRENT_FILE_PATH}:/torrents'
      - '/etc/localtime:/etc/localtime:ro'
    network_mode: "bridge"
    cap_add:
      - NET_ADMIN
    ports:
      - '${IP_ADDRESS}:${DELUGEVPN_WEBUI_PORT}:8112'
      - '${IP_ADDRESS}:8118:8118'
      - '${IP_ADDRESS}:58846:58846'
      - '${IP_ADDRESS}:58946:58946'
    restart: unless-stopped

  # RADARR: Movie Management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
    volumes:
      - '${CONFIG_PATH}/radarr:/config'
      - '${MEDIA_BASE_PATH}/movies:/movies'
      - '${TORRENT_COMPLETE_PATH}:/new'
      - '/etc/localtime:/etc/localtime:ro'
    network_mode: "bridge"
    ports:
      - '${IP_ADDRESS}:${RADARR_PORT}:7878'
    restart: unless-stopped

  # SONARR: TV Series Management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
    volumes:
      - '${CONFIG_PATH}/sonarr:/config'
      - '${MEDIA_BASE_PATH}/tv:/tv'
      - '${TORRENT_COMPLETE_PATH}:/new'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '${SONARR_PORT}:8989'
    restart: unless-stopped
    ## These services mostly work but have been set aside
    ## to finish the above 
    # # READARR: Book Management
    # readarr:
    #   container_name: readarr
    #   image: lscr.io/linuxserver/readarr:develop
    #   env_file: .env
    #   environment:
    #     - TZ=${TZ}
    #     - PUID=${PUID}
    #     - PGID=${PGID}
    #     - UMASK=${UMASK}
    #   logging:
    #     driver: 'json-file'
    #     options:
    #       max-file: '${LOG_FILE_NUM}'
    #       max-size: '${LOG_FILE_SIZE}'
    #   volumes:
    #     - '${CONFIG_PATH}/readarr:/config'
    #     - '${MEDIA_BASE_PATH}/books:/books'
    #     - '${TORRENT_COMPLETE_PATH}:/new'
    #     - /etc/localtime:/etc/localtime:ro
    #   ports:
    #     - '${READARR_PORT}:8787'
    #   restart: unless-stopped

    # # CALIBRE: Book Interface
    # calibre:
    #   image: lscr.io/linuxserver/calibre:latest
    #   container_name: calibre
    #   security_opt:
    #     - seccomp:unconfined #optional
    #   logging:
    #     driver: 'json-file'
    #     options:
    #       max-file: '${LOG_FILE_NUM}'
    #       max-size: '${LOG_FILE_SIZE}'
    #   environment:
    #     - TZ=${TZ}
    #     - PUID=${PUID}
    #     - PGID=${PGID}
    #     - UMASK=${UMASK}
    #     - PASSWORD=${CALIBRE_AUTH_PASSWORD}
    #   volumes:
    #     - '${MEDIA_BASE_PATH}/books:/books'
    #     - '${TORRENT_COMPLETE_PATH}:/new'
    #     - '/etc/localtime:/etc/localtime:ro'
    #   ports:
    #     - '${CALIBRE_HTTP_PORT}:8080'
    #     - '${CALIBRE_HTTPS_PORT}:8181'
    #     - '${CALIBRE_WEBSERVER_PORT}:8081'
    #   restart: unless-stopped

    # # TAUTULLI: Monitoring Service for PLEX Usage
    # tautulli:
    #   image: lscr.io/linuxserver/tautulli:latest
    #   container_name: tautulli
    #   logging:
    #     driver: 'json-file'
    #     options:
    #       max-file: '${LOG_FILE_NUM}'
    #       max-size: '${LOG_FILE_SIZE}'
    #   environment:
    #     - TZ=${TZ}
    #     - PUID=${PUID}
    #     - PGID=${PGID}
    #   volumes:
    #     - '${CONFIG_PATH}/tautulli:/config'
    #     - '/etc/localtime:/etc/localtime:ro'
    #   ports:
    #     - '${TAUTULLI_PORT}:8181'
    #   restart: unless-stopped

    # # ORGANIZR: Web Frontend for Management
    # organizr:
    #   image: organizr/organizr
    #   container_name: organizr
    #   env_file: .env
    #   logging:
    #     driver: 'json-file'
    #     options:
    #       max-file: '${LOG_FILE_NUM}'
    #       max-size: '${LOG_FILE_SIZE}'
    #   environment:
    #     - TZ=${TZ}
    #     - PUID=${PUID}
    #     - PGID=${PGID}
    #   volumes:
    #     - '${CONFIG_PATH}/organizr:/config'
    #     - '/etc/localtime:/etc/localtime:ro'
    #   ports:
    #     - '${ORGANIZR_PORT}:80'
    #   restart: unless-stopped
