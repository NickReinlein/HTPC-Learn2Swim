#########################################
##                                      #
##        Learn2Swim HTPC Docker        #
##                                      #
#################################################
##                                              #
## Configuration is read from the .env file     #
## Ensure the .env file is in this folder       #
##                                              #
#################################################

version: "3.5"

services:
  # ORGANIZR: Web Frontend for Management
  organizr:
    image: organizr/organizr
    container_name: organizr
    restart: unless-stopped
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${ORGANIZR_PORT}:80'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'

  # READARR: Book Management
  readarr:
    container_name: readarr
    image: lscr.io/linuxserver/readarr:develop
    restart: unless-stopped
    env_file: .env
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${READARR_PORT}:8787'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - '${TORRENTS_PATH}/completed:/data/completed'
      - '${MEDIA_BASE_PATH}/books:/books'

  # CALIBRE: Book Interface
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    security_opt:
      - seccomp:unconfined #optional
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${CALIBRE_PORT}:8080'
      - '${CALIBRE_SERVER_PORT}:8181'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - PASSWORD=${CALIBRE_AUTH}
    volumes:
      - '${TORRENTS_PATH}/completed:/data/completed'
      - '${MEDIA_BASE_PATH}/books:/books'
      - '/etc/localtime:/etc/localtime:ro'

  # SONARR: TV Series Management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${SONARR_PORT}:8989'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${TORRENTS_PATH}/completed:/data/completed'
      - '${MEDIA_BASE_PATH}/tv:/tv'
      - '${MEDIA_BASE_PATH}/kids/tv:/kids/tv'
      - '/etc/localtime:/etc/localtime:ro'

  # RADARR: Movie Management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    env_file: .env
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${RADARR_PORT}:7878'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${TORRENTS_PATH}/completed:/data/completed'''
      - '${MEDIA_BASE_PATH}/movies:/movies'
      - '${MEDIA_BASE_PATH}/kids/movies:/kids/movies'
      - '/etc/localtime:/etc/localtime:ro'
  # #PLEX-SERVER: Media management & distribution service
  # plex-server:
  #   container_name: plex-server
  #   image: plexinc/pms-docker:latest
  #   env_file: .env
  #   environment:
  #     - TZ=${TZ}
  #   network_mode: host
  #   volumes:
  #     - ${ROOT}/config/plex/db:/config # plex database
  #     - ${ROOT}/config/plex/transcode:/transcode # temp transcoded files
  #     - '${MEDIA_BASE_PATH}/:/'
